import{defineProperty as t}from"../../_virtual/_rollupPluginBabelHelpers.min.mjs";import{BaseFilter as r}from"./BaseFilter.min.mjs";import{classRegistry as o}from"../ClassRegistry.min.mjs";import{fragmentSource as s}from"./shaders/colorMatrix.min.mjs";const i={matrix:[1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0],colorsOnly:!0};class a extends r{getFragmentSource(){return s}applyTo2d(t){const r=t.imageData.data,o=this.matrix,s=this.colorsOnly;for(let t=0;t<r.length;t+=4){const i=r[t],a=r[t+1],e=r[t+2];if(r[t]=i*o[0]+a*o[1]+e*o[2]+255*o[4],r[t+1]=i*o[5]+a*o[6]+e*o[7]+255*o[9],r[t+2]=i*o[10]+a*o[11]+e*o[12]+255*o[14],!s){const s=r[t+3];r[t]+=s*o[3],r[t+1]+=s*o[8],r[t+2]+=s*o[13],r[t+3]=i*o[15]+a*o[16]+e*o[17]+s*o[18]+255*o[19]}}}sendUniformData(t,r){const o=this.matrix,s=[o[0],o[1],o[2],o[3],o[5],o[6],o[7],o[8],o[10],o[11],o[12],o[13],o[15],o[16],o[17],o[18]],i=[o[4],o[9],o[14],o[19]];t.uniformMatrix4fv(r.uColorMatrix,!1,s),t.uniform4fv(r.uConstants,i)}toObject(){return{...super.toObject(),matrix:[...this.matrix]}}}t(a,"type","ColorMatrix"),t(a,"defaults",i),t(a,"uniformLocations",["uColorMatrix","uConstants"]),o.setClass(a);export{a as ColorMatrix,i as colorMatrixDefaultValues};
//# sourceMappingURL=ColorMatrix.min.mjs.map
