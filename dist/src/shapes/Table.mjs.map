{"version":3,"file":"Table.mjs","sources":["../../../src/shapes/Table.ts"],"sourcesContent":["//*PMW* class addded for tables\nimport { Group } from './Group';\nimport { classRegistry } from '../ClassRegistry';\nimport type { IText } from 'fabric';\n\nexport class Table extends Group {\n  /**\n   * Type of an object\n   * @type String\n   * @default\n   */\n  static type = 'table';\n\n  /**\n   * Number of table rows\n   * @type {Number}\n   */\n  rows = 0;\n  /**\n   * Number of table columns\n   * @type {Number}\n   */\n  columns = 0;\n  /**\n   * Layout style\n   * @type {String}\n   */\n  layoutType = '';\n  /**\n   * Background color 1 for alternate table background\n   * @type {String}\n   */\n  alternateBackgroundColor1 = null;\n  /**\n   * Background color 2 for alternate table background\n   * @type {String}\n   */\n  alternateBackgroundColor2 = null;\n  /**\n   * Background color for highlighted rows\n   * @type {String}\n   */\n  highlightedRowsBackgroundColor = null;\n  /**\n   * Array containing indices of highlighted rows\n   * @type {Array}\n   */\n  highlightedRows: Array<number> = [];\n  /**\n   * 2D array containing table data\n   * @type {Array}\n   */\n  tableArray: Array<Array<IText>> = [[]];\n  /**\n   * Spacing Between rows of table\n   * @type {Number}\n   */\n  ySpacing = 0;\n  /**\n   * Spacing Between column of table\n   * @type {Number}\n   */\n  xSpacing = 0;\n  /**\n   * Property used for showing the 'edit content' button\n   * @type {boolean}\n   */\n  hasButton = true;\n\n  /**\n   * Draws the table/schedule border\n   * @param {CanvasRenderingContext2D} ctx context to draw on\n   */\n  renderTableBorders(ctx: CanvasRenderingContext2D) {\n    if (!this.stroke || this.strokeWidth === 0) {\n      return;\n    }\n    ctx.save();\n    this._setStrokeStyles(ctx, this);\n    ctx.strokeRect(\n      -(this.width / 2),\n      -(this.height / 2),\n      this.width,\n      this.height\n    );\n\n    // if custom table layout them draw rows and column border too\n    if (this.isTableLayout()) {\n      this.drawColumnBorders(ctx);\n      this.drawRowBorders(ctx);\n    }\n    ctx.restore();\n  }\n\n  public isTable(): this is Table{\n    return true;\n  }\n\n  /**\n   * This function is responsible for rendering the background of table.\n   * It loops over all the rows in the table and draws the appropriate color rectangle for each row.\n   * If more then one consecutive rows have background of same color then it draws a one big rectangle of that color.\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   */\n  renderTableCustomBackground(ctx: CanvasRenderingContext2D) {\n    if (\n      (this.highlightedRows.length == 0 &&\n        !(this.alternateBackgroundColor1 && this.alternateBackgroundColor2)) ||\n      !this.isTableLayout()\n    ) {\n      this.renderGroupBackground(ctx);\n      return;\n    }\n\n    const backgroundData = this.getTableBackGroundData();\n    ctx.save();\n    const objects = this.getObjects();\n    let top = null;\n    let height = null;\n    let renderBackground = false;\n\n    for (let i = 0; i < backgroundData.length; i++) {\n      renderBackground = false;\n      if (backgroundData[i] != 'none') {\n        if (top == null) {\n          if (i == 0) {\n            top = -this.height / 2;\n          } else {\n            top = objects[i].top - this.ySpacing / 2;\n          }\n        }\n\n        if (backgroundData[i] != backgroundData[i + 1]) {\n          // set height of rectangle to render\n          height =\n            Math.abs(top - objects[i].top) +\n            this.getHeightOfRow(i) +\n            this.ySpacing / 2;\n          renderBackground = true;\n\n          switch (backgroundData[i]) {\n            case 'highlight':\n              // @ts-ignore\n              ctx.fillStyle = this.highlightedRowsBackgroundColor;\n              break;\n            case 'color':\n              ctx.fillStyle = this.backgroundColor;\n              break;\n            case 'alternate1':\n              // @ts-ignore\n              ctx.fillStyle = this.alternateBackgroundColor1;\n              break;\n            case 'alternate2':\n              // @ts-ignore\n              ctx.fillStyle = this.alternateBackgroundColor2;\n              break;\n          }\n        } else {\n          renderBackground = false;\n        }\n\n        if (renderBackground) {\n          ctx.fillRect(-this.width / 2, top, this.width, height ?? 0);\n          top = null;\n          height = null;\n        }\n      }\n    }\n    ctx.restore();\n  }\n\n  /**\n   * Returns an array containing string values corresponding to rows background color.\n   * 'highlight' for selected rows\n   * 'color' for when colored background is selected by user\n   * 'alternate1' for even rows when alternate background is selected\n   * 'alternate2' for odd rows when alternate background is selected\n   * 'none' for transparent background\n   * @returns {Array}\n   */\n  getTableBackGroundData() {\n    const data = [];\n    for (let i = 0; i < this.rows; i++) {\n      if (this.highlightedRows.indexOf(i) != -1) {\n        data.push('highlight');\n      } else if (this.backgroundColor != null) {\n        data.push('color');\n      } else if (\n        this.alternateBackgroundColor1 &&\n        this.alternateBackgroundColor2\n      ) {\n        if (i % 2 == 0) {\n          data.push('alternate1');\n        } else {\n          data.push('alternate2');\n        }\n      } else {\n        data.push('none');\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Returns the height of an item in a given row with max height,\n   * this value is basically the minimum space in y-axis needed by this row in a table.\n   * @param {Number} row\n   * @returns {Number}\n   */\n  getHeightOfRow(row: number) {\n    let height = 0,\n      h;\n    for (let i = 0; i < this.columns; i++) {\n      h = this.tableArray[i][row].calcTextHeight();\n      if (h > height) {\n        height = h;\n      }\n    }\n    return height;\n  }\n\n  /**\n   * Returns the width of an item in a given column with max width,\n   * this value is basically the minimum space in x-axis needed by this column in a table.\n   * @param {Number} column column index\n   * @returns {Number} minimum width required by this column\n   */\n  getWidthOfColumn(column: number) {\n    let width = 0,\n      w;\n    for (let i = 0; i < this.rows; i++) {\n      w = this.tableArray[column][i].calcTextWidth();\n      if (w > width) {\n        width = w;\n      }\n    }\n    return width;\n  }\n\n  /**\n   * renders border for table columns\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   */\n  drawColumnBorders(ctx: CanvasRenderingContext2D) {\n    const objects = this.getObjects();\n    let x = this.rows,\n      maxWidth,\n      w,\n      itemIndex;\n    for (let i = 2; i <= this.columns; i++) {\n      maxWidth = 0;\n      // @ts-ignore\n      while (objects[x] && objects[x].column == i) {\n        w = objects[x].width;\n        if (w > maxWidth) {\n          maxWidth = w;\n          itemIndex = x;\n        }\n        x++;\n      }\n      if(itemIndex) {\n        ctx.beginPath();\n        ctx.moveTo(\n          objects[itemIndex].left - this.xSpacing / 2,\n          -(this.height / 2)\n        );\n        ctx.lineTo(\n          objects[itemIndex].left - this.xSpacing / 2,\n          -(this.height / 2) + this.height\n        );\n        ctx.stroke();\n      }\n    }\n  }\n\n  /**\n   * renders border for table rows\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   */\n  drawRowBorders(ctx: CanvasRenderingContext2D) {\n    const objects = this.getObjects();\n    for (let i = 1; i < this.rows; i++) {\n      const startX = -this.width / 2,\n        startY = objects[i].top - this.ySpacing / 2,\n        endX = startX + this.width,\n        endY = startY;\n      ctx.beginPath();\n      ctx.moveTo(startX, startY);\n      ctx.lineTo(endX, endY);\n      ctx.stroke();\n    }\n  }\n\n  /**\n   * Returns true if design is simple table structure('custom-table' or 'layout-1'), false otherwise\n   * @returns {boolean}\n   */\n  isTableLayout() {\n    return this.layoutType == 'layout-1' || this.layoutType == 'custom-table';\n  }\n}\n\nclassRegistry.setClass(Table);\nclassRegistry.setClass(Table, 'table');\n"],"names":["Table","Group","constructor","arguments","_defineProperty","renderTableBorders","ctx","stroke","strokeWidth","save","_setStrokeStyles","strokeRect","width","height","isTableLayout","drawColumnBorders","drawRowBorders","restore","isTable","renderTableCustomBackground","highlightedRows","length","alternateBackgroundColor1","alternateBackgroundColor2","renderGroupBackground","backgroundData","getTableBackGroundData","objects","getObjects","top","renderBackground","i","ySpacing","Math","abs","getHeightOfRow","fillStyle","highlightedRowsBackgroundColor","backgroundColor","_height","fillRect","data","rows","indexOf","push","row","h","columns","tableArray","calcTextHeight","getWidthOfColumn","column","w","calcTextWidth","x","maxWidth","itemIndex","beginPath","moveTo","left","xSpacing","lineTo","startX","startY","endX","endY","layoutType","classRegistry","setClass"],"mappings":"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"}