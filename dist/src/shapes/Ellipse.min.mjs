import{defineProperty as t}from"../../_virtual/_rollupPluginBabelHelpers.min.mjs";import{SCALE_X as r,SCALE_Y as e,twoMathPi as s}from"../constants.min.mjs";import{SHARED_ATTRIBUTES as i}from"../parser/attributes.min.mjs";import{parseAttributes as n}from"../parser/parseAttributes.min.mjs";import{classRegistry as o}from"../ClassRegistry.min.mjs";import{FabricObject as a}from"./Object/FabricObject.min.mjs";import{cacheProperties as m}from"./Object/defaultValues.min.mjs";const c={rx:0,ry:0},h=["rx","ry"];class l extends a{static getDefaults(){return{...super.getDefaults(),...l.ownDefaults}}constructor(t){super(),Object.assign(this,l.ownDefaults),this.setOptions(t)}_set(t,r){switch(super._set(t,r),t){case"rx":this.rx=r,this.set("width",2*r);break;case"ry":this.ry=r,this.set("height",2*r)}return this}getRx(){return this.get("rx")*this.get(r)}getRy(){return this.get("ry")*this.get(e)}toObject(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return super.toObject([...h,...t])}_toSVG(){return["<ellipse ","COMMON_PARTS",`cx="0" cy="0" rx="${this.rx}" ry="${this.ry}" />\n`]}_render(t){t.beginPath(),t.save(),t.transform(1,0,0,this.ry/this.rx,0,0),t.arc(0,0,this.rx,0,s,!1),t.restore(),this._renderPaintInOrder(t)}static async fromElement(t,r,e){const s=n(t,this.ATTRIBUTE_NAMES,e);return s.left=(s.left||0)-s.rx,s.top=(s.top||0)-s.ry,new this(s)}}t(l,"type","Ellipse"),t(l,"cacheProperties",[...m,...h]),t(l,"ownDefaults",c),t(l,"ATTRIBUTE_NAMES",[...i,"cx","cy","rx","ry"]),o.setClass(l),o.setSVGClass(l);export{l as Ellipse,c as ellipseDefaultValues};
//# sourceMappingURL=Ellipse.min.mjs.map
