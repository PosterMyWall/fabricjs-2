import{STROKE as r,FILL as e,twoMathPi as o}from"../constants.min.mjs";import{degreesToRadians as n}from"../util/misc/radiansDegreesConversion.min.mjs";function t(n,t,s,c,i){c=c||{};const l=this.sizeX||c.cornerSize||i.cornerSize,a=this.sizeY||c.cornerSize||i.cornerSize,S=void 0!==c.transparentCorners?c.transparentCorners:i.transparentCorners,C=S?r:e,k=!S&&(c.cornerStrokeColor||i.cornerStrokeColor);let z,m=t,p=s;n.save(),n.fillStyle=c.cornerColor||i.cornerColor||"",n.strokeStyle=c.cornerStrokeColor||i.cornerStrokeColor||"",l>a?(z=l,n.scale(1,a/l),p=s*l/a):a>l?(z=a,n.scale(l/a,1),m=t*a/l):z=l,n.beginPath(),n.arc(m,p,z/2,0,o,!1),n[C](),k&&n.stroke(),n.restore()}function s(o,t,s,c,i){c=c||{};const l=this.sizeX||c.cornerSize||i.cornerSize,a=this.sizeY||c.cornerSize||i.cornerSize,S=void 0!==c.transparentCorners?c.transparentCorners:i.transparentCorners,C=S?r:e,k=!S&&(c.cornerStrokeColor||i.cornerStrokeColor),z=l/2,m=a/2;o.save(),o.fillStyle=c.cornerColor||i.cornerColor||"",o.strokeStyle=c.cornerStrokeColor||i.cornerStrokeColor||"",o.translate(t,s);const p=i.getTotalAngle();o.rotate(n(p)),o[`${C}Rect`](-z,-m,l,a),k&&o.strokeRect(-z,-m,l,a),o.restore()}export{t as renderCircleControl,s as renderSquareControl};
//# sourceMappingURL=controlRendering.min.mjs.map
