{"version":3,"file":"StaticCanvas.mjs","sources":["../../../src/canvas/StaticCanvas.ts"],"sourcesContent":["import { config } from '../config';\nimport { CENTER, VERSION } from '../constants';\nimport type { CanvasEvents, StaticCanvasEvents } from '../EventTypeDefs';\nimport type { Gradient } from '../gradient/Gradient';\nimport { createCollectionMixin, isCollection } from '../Collection';\nimport { CommonMethods } from '../CommonMethods';\nimport type { Pattern } from '../Pattern';\nimport { Point } from '../Point';\nimport type { TCachedFabricObject } from '../shapes/Object/Object';\nimport type {\n  Abortable,\n  Constructor,\n  TCornerPoint,\n  TDataUrlOptions,\n  TFiller,\n  TMat2D,\n  TSize,\n  TSVGReviver,\n  TToCanvasElementOptions,\n  TValidToObjectMethod,\n  TOptions,\n} from '../typedefs';\nimport {\n  cancelAnimFrame,\n  requestAnimFrame,\n} from '../util/animation/AnimationFrameProvider';\nimport { runningAnimations } from '../util/animation/AnimationRegistry';\nimport { uid } from '../util/internals/uid';\nimport { createCanvasElementFor, toBlob, toDataURL } from '../util/misc/dom';\nimport { invertTransform, transformPoint } from '../util/misc/matrix';\nimport type { EnlivenObjectOptions } from '../util/misc/objectEnlive';\nimport {\n  enlivenObjectEnlivables,\n  enlivenObjects,\n} from '../util/misc/objectEnlive';\nimport { pick } from '../util/misc/pick';\nimport { matrixToSVG } from '../util/misc/svgExport';\nimport { toFixed } from '../util/misc/toFixed';\nimport { isFiller, isPattern, isTextObject } from '../util/typeAssertions';\nimport { StaticCanvasDOMManager } from './DOMManagers/StaticCanvasDOMManager';\nimport type { CSSDimensions } from './DOMManagers/util';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { StaticCanvasOptions } from './StaticCanvasOptions';\nimport { staticCanvasDefaults } from './StaticCanvasOptions';\nimport { log, FabricError } from '../util/internals/console';\nimport { getDevicePixelRatio } from '../env';\n\n/**\n * Having both options in TCanvasSizeOptions set to true transform the call in a calcOffset\n * Better try to restrict with types to avoid confusion.\n */\nexport type TCanvasSizeOptions =\n  | {\n      backstoreOnly?: true;\n      cssOnly?: false;\n    }\n  | {\n      backstoreOnly?: false;\n      cssOnly?: true;\n    };\n\nexport type TSVGExportOptions = {\n  suppressPreamble?: boolean;\n  viewBox?: {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n  };\n  encoding?: 'UTF-8'; // test Encoding type and see what happens\n  width?: string;\n  height?: string;\n  reviver?: TSVGReviver;\n};\n\n/**\n * Static canvas class\n * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n * @fires before:render\n * @fires after:render\n * @fires canvas:cleared\n * @fires object:added\n * @fires object:removed\n */\n// TODO: fix `EventSpec` inheritance https://github.com/microsoft/TypeScript/issues/26154#issuecomment-1366616260\nexport class StaticCanvas<\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    EventSpec extends StaticCanvasEvents = StaticCanvasEvents,\n  >\n  extends createCollectionMixin(CommonMethods<CanvasEvents>)\n  implements StaticCanvasOptions\n{\n  declare width: number;\n  declare height: number;\n\n  // background\n  declare backgroundVpt: boolean;\n  declare backgroundColor: TFiller | string;\n  declare backgroundImage?: FabricObject;\n  // overlay\n  declare overlayVpt: boolean;\n  declare overlayColor: TFiller | string;\n  declare overlayImage?: FabricObject;\n\n  declare clipPath?: FabricObject;\n\n  declare includeDefaultValues: boolean;\n\n  // rendering config\n  declare renderOnAddRemove: boolean;\n  declare skipOffscreen: boolean;\n  declare enableRetinaScaling: boolean;\n  declare imageSmoothingEnabled: boolean;\n\n  /**\n   * @todo move to Canvas\n   */\n  declare controlsAboveOverlay: boolean;\n\n  /**\n   * @todo move to Canvas\n   */\n  declare allowTouchScrolling: boolean;\n\n  declare viewportTransform: TMat2D;\n\n  /**\n   * The viewport bounding box in scene plane coordinates, see {@link calcViewportBoundaries}\n   */\n  declare vptCoords: TCornerPoint;\n\n  /**\n   * A reference to the canvas actual HTMLCanvasElement.\n   * Can be use to read the raw pixels, but never write or manipulate\n   * @type HTMLCanvasElement\n   */\n  get lowerCanvasEl() {\n    return this.elements.lower?.el;\n  }\n\n  get contextContainer() {\n    return this.elements.lower?.ctx;\n  }\n\n  /**\n   * If true the Canvas is in the process or has been disposed/destroyed.\n   * No more rendering operation will be executed on this canvas.\n   * @type boolean\n   */\n  declare destroyed?: boolean;\n\n  /**\n   * Started the process of disposing but not done yet.\n   * WIll likely complete the render cycle already scheduled but stopping adding more.\n   * @type boolean\n   */\n  declare disposed?: boolean;\n\n  declare _offset: { left: number; top: number };\n  declare protected hasLostContext: boolean;\n  declare protected nextRenderHandle: number;\n\n  declare elements: StaticCanvasDOMManager;\n\n  /**\n   * When true control drawing is skipped.\n   * This boolean is used to avoid toDataURL to export controls.\n   * Usage of this boolean to build up other flows and features is not supported\n   * @type Boolean\n   * @default false\n   */\n  declare protected skipControlsDrawing: boolean;\n\n  static ownDefaults = staticCanvasDefaults;\n\n  // reference to\n  declare protected __cleanupTask?: {\n    (): void;\n    kill: (reason?: any) => void;\n  };\n\n  static getDefaults(): Record<string, any> {\n    return StaticCanvas.ownDefaults;\n  }\n\n  constructor(\n    el?: string | HTMLCanvasElement,\n    options: TOptions<StaticCanvasOptions> = {},\n  ) {\n    super();\n    Object.assign(\n      this,\n      (this.constructor as typeof StaticCanvas).getDefaults(),\n    );\n    this.set(options);\n    this.initElements(el);\n    this._setDimensionsImpl({\n      width: this.width || this.elements.lower.el.width || 0,\n      height: this.height || this.elements.lower.el.height || 0,\n    });\n    this.skipControlsDrawing = false;\n    this.viewportTransform = [...this.viewportTransform];\n    this.calcViewportBoundaries();\n  }\n\n  protected initElements(el?: string | HTMLCanvasElement) {\n    this.elements = new StaticCanvasDOMManager(el);\n  }\n\n  add(...objects: FabricObject[]) {\n    const size = super.add(...objects);\n    objects.length > 0 && this.renderOnAddRemove && this.requestRenderAll();\n    return size;\n  }\n\n  insertAt(index: number, ...objects: FabricObject[]) {\n    const size = super.insertAt(index, ...objects);\n    objects.length > 0 && this.renderOnAddRemove && this.requestRenderAll();\n    return size;\n  }\n\n  remove(...objects: FabricObject[]) {\n    const removed = super.remove(...objects);\n    removed.length > 0 && this.renderOnAddRemove && this.requestRenderAll();\n    return removed;\n  }\n\n  _onObjectAdded(obj: FabricObject) {\n    if (obj.canvas && (obj.canvas as StaticCanvas) !== this) {\n      log(\n        'warn',\n        'Canvas is trying to add an object that belongs to a different canvas.\\n' +\n          'Resulting to default behavior: removing object from previous canvas and adding to new canvas',\n      );\n      obj.canvas.remove(obj);\n    }\n    obj._set('canvas', this);\n    obj.setCoords();\n    this.fire('object:added', { target: obj });\n    obj.fire('added', { target: this });\n  }\n\n  _onObjectRemoved(obj: FabricObject) {\n    obj._set('canvas', undefined);\n    this.fire('object:removed', { target: obj });\n    obj.fire('removed', { target: this });\n  }\n\n  _onStackOrderChanged() {\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * @private\n   * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n   * @return {Number} retinaScaling if applied, otherwise 1;\n   */\n  getRetinaScaling() {\n    return this.enableRetinaScaling ? getDevicePixelRatio() : 1;\n  }\n\n  /**\n   * Calculates canvas element offset relative to the document\n   * This method is also attached as \"resize\" event handler of window\n   */\n  calcOffset() {\n    return (this._offset = this.elements.calcOffset());\n  }\n\n  /**\n   * Returns canvas width (in px)\n   * @return {Number}\n   */\n  getWidth(): number {\n    return this.width;\n  }\n\n  /**\n   * Returns canvas height (in px)\n   * @return {Number}\n   */\n  getHeight(): number {\n    return this.height;\n  }\n\n  /**\n   * Internal use only\n   * @protected\n   */\n  protected _setDimensionsImpl(\n    dimensions: Partial<TSize | CSSDimensions>,\n    { cssOnly = false, backstoreOnly = false }: TCanvasSizeOptions = {},\n  ) {\n    if (!cssOnly) {\n      const size = {\n        width: this.width,\n        height: this.height,\n        ...(dimensions as Partial<TSize>),\n      };\n      this.elements.setDimensions(size, this.getRetinaScaling());\n      this.hasLostContext = true;\n      this.width = size.width;\n      this.height = size.height;\n    }\n    if (!backstoreOnly) {\n      this.elements.setCSSDimensions(dimensions);\n    }\n\n    this.calcOffset();\n  }\n\n  /**\n   * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n   * @param {Object}        dimensions                    Object with width/height properties\n   * @param {Number|String} [dimensions.width]            Width of canvas element\n   * @param {Number|String} [dimensions.height]           Height of canvas element\n   * @param {Object}        [options]                     Options object\n   * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n   * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n   */\n  setDimensions(\n    dimensions: Partial<CSSDimensions>,\n    options?: { cssOnly?: true; backstoreOnly?: false },\n  ): void;\n  setDimensions(\n    dimensions: Partial<TSize>,\n    options?: { backstoreOnly?: true; cssOnly?: false },\n  ): void;\n  setDimensions(dimensions: Partial<TSize>, options?: never): void;\n  setDimensions(\n    dimensions: Partial<TSize | CSSDimensions>,\n    options?: TCanvasSizeOptions,\n  ) {\n    this._setDimensionsImpl(dimensions, options);\n    if (!options || !options.cssOnly) {\n      this.requestRenderAll();\n    }\n  }\n\n  /**\n   * Returns canvas zoom level\n   * @return {Number}\n   */\n  getZoom() {\n    return this.viewportTransform[0];\n  }\n\n  /**\n   * Sets viewport transformation of this canvas instance\n   * @param {Array} vpt a Canvas 2D API transform matrix\n   */\n  setViewportTransform(vpt: TMat2D) {\n    this.viewportTransform = vpt;\n    this.calcViewportBoundaries();\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * Sets zoom level of this canvas instance, the zoom centered around point\n   * meaning that following zoom to point with the same point will have the visual\n   * effect of the zoom originating from that point. The point won't move.\n   * It has nothing to do with canvas center or visual center of the viewport.\n   * @param {Point} point to zoom with respect to\n   * @param {Number} value to set zoom to, less than 1 zooms out\n   */\n  zoomToPoint(point: Point, value: number) {\n    // TODO: just change the scale, preserve other transformations\n    const before = point,\n      vpt: TMat2D = [...this.viewportTransform];\n    const newPoint = transformPoint(point, invertTransform(vpt));\n    vpt[0] = value;\n    vpt[3] = value;\n    const after = transformPoint(newPoint, vpt);\n    vpt[4] += before.x - after.x;\n    vpt[5] += before.y - after.y;\n    this.setViewportTransform(vpt);\n  }\n\n  /**\n   * Sets zoom level of this canvas instance\n   * @param {Number} value to set zoom to, less than 1 zooms out\n   */\n  setZoom(value: number) {\n    this.zoomToPoint(new Point(0, 0), value);\n  }\n\n  /**\n   * Pan viewport so as to place point at top left corner of canvas\n   * @param {Point} point to move to\n   */\n  absolutePan(point: Point) {\n    const vpt: TMat2D = [...this.viewportTransform];\n    vpt[4] = -point.x;\n    vpt[5] = -point.y;\n    return this.setViewportTransform(vpt);\n  }\n\n  /**\n   * Pans viewpoint relatively\n   * @param {Point} point (position vector) to move by\n   */\n  relativePan(point: Point) {\n    return this.absolutePan(\n      new Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5],\n      ),\n    );\n  }\n\n  /**\n   * Returns &lt;canvas> element corresponding to this instance\n   * @return {HTMLCanvasElement}\n   */\n  getElement(): HTMLCanvasElement {\n    return this.elements.lower.el;\n  }\n\n  /**\n   * Clears specified context of canvas element\n   * @param {CanvasRenderingContext2D} ctx Context to clear\n   */\n  clearContext(ctx: CanvasRenderingContext2D) {\n    ctx.clearRect(0, 0, this.width, this.height);\n  }\n\n  /**\n   * Returns context of canvas where objects are drawn\n   * @return {CanvasRenderingContext2D}\n   */\n  getContext(): CanvasRenderingContext2D {\n    return this.elements.lower.ctx;\n  }\n\n  /**\n   * Clears all contexts (background, main, top) of an instance\n   */\n  clear() {\n    this.remove(...this.getObjects());\n    this.backgroundImage = undefined;\n    this.overlayImage = undefined;\n    this.backgroundColor = '';\n    this.overlayColor = '';\n    this.clearContext(this.getContext());\n    this.fire('canvas:cleared');\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * Renders the canvas\n   */\n  renderAll() {\n    this.cancelRequestedRender();\n    if (this.destroyed) {\n      return;\n    }\n    this.renderCanvas(this.getContext(), this._objects);\n  }\n\n  /**\n   * Function created to be instance bound at initialization\n   * used in requestAnimationFrame rendering\n   * Let the fabricJS call it. If you call it manually you could have more\n   * animationFrame stacking on to of each other\n   * for an imperative rendering, use canvas.renderAll\n   * @private\n   */\n  renderAndReset() {\n    this.nextRenderHandle = 0;\n    this.renderAll();\n  }\n\n  /**\n   * Append a renderAll request to next animation frame.\n   * unless one is already in progress, in that case nothing is done\n   * a boolean flag will avoid appending more.\n   */\n  requestRenderAll() {\n    if (!this.nextRenderHandle && !this.disposed && !this.destroyed) {\n      this.nextRenderHandle = requestAnimFrame(() => this.renderAndReset());\n    }\n  }\n\n  /**\n   * Calculate the position of the 4 corner of canvas with current viewportTransform.\n   * helps to determinate when an object is in the current rendering viewport\n   */\n  calcViewportBoundaries(): TCornerPoint {\n    const width = this.width,\n      height = this.height,\n      iVpt = invertTransform(this.viewportTransform),\n      a = transformPoint({ x: 0, y: 0 }, iVpt),\n      b = transformPoint({ x: width, y: height }, iVpt),\n      // we don't support vpt flipping\n      // but the code is robust enough to mostly work with flipping\n      min = a.min(b),\n      max = a.max(b);\n    return (this.vptCoords = {\n      tl: min,\n      tr: new Point(max.x, min.y),\n      bl: new Point(min.x, max.y),\n      br: max,\n    });\n  }\n\n  cancelRequestedRender() {\n    if (this.nextRenderHandle) {\n      cancelAnimFrame(this.nextRenderHandle);\n      this.nextRenderHandle = 0;\n    }\n  }\n\n  drawControls(_ctx: CanvasRenderingContext2D) {\n    // Static canvas has no controls\n  }\n\n  /**\n   * Renders background, objects, overlay and controls.\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Array} objects to render\n   */\n  renderCanvas(ctx: CanvasRenderingContext2D, objects: FabricObject[]) {\n    if (this.destroyed) {\n      return;\n    }\n\n    const v = this.viewportTransform,\n      path = this.clipPath;\n    this.calcViewportBoundaries();\n    this.clearContext(ctx);\n    ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    // @ts-expect-error node-canvas stuff\n    ctx.patternQuality = 'best';\n    this.fire('before:render', { ctx });\n    this._renderBackground(ctx);\n\n    ctx.save();\n    //apply viewport transform once for all rendering process\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n    this._renderObjects(ctx, objects);\n    ctx.restore();\n    if (!this.controlsAboveOverlay && !this.skipControlsDrawing) {\n      this.drawControls(ctx);\n    }\n    if (path) {\n      path._set('canvas', this);\n      // needed to setup a couple of variables\n      // todo migrate to the newer one\n      path.shouldCache();\n      path._transformDone = true;\n      (path as TCachedFabricObject).renderCache({ forClipping: true });\n      this.drawClipPathOnCanvas(ctx, path as TCachedFabricObject);\n    }\n    this._renderOverlay(ctx);\n    if (this.controlsAboveOverlay && !this.skipControlsDrawing) {\n      this.drawControls(ctx);\n    }\n    this.fire('after:render', { ctx });\n\n    if (this.__cleanupTask) {\n      this.__cleanupTask();\n      this.__cleanupTask = undefined;\n    }\n  }\n\n  /**\n   * Paint the cached clipPath on the lowerCanvasEl\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawClipPathOnCanvas(\n    ctx: CanvasRenderingContext2D,\n    clipPath: TCachedFabricObject,\n  ) {\n    const v = this.viewportTransform;\n    ctx.save();\n    ctx.transform(...v);\n    // DEBUG: uncomment this line, comment the following\n    // ctx.globalAlpha = 0.4;\n    ctx.globalCompositeOperation = 'destination-in';\n    clipPath.transform(ctx);\n    ctx.scale(1 / clipPath.zoomX, 1 / clipPath.zoomY);\n    ctx.drawImage(\n      clipPath._cacheCanvas,\n      -clipPath.cacheTranslationX,\n      -clipPath.cacheTranslationY,\n    );\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Array} objects to render\n   */\n  _renderObjects(ctx: CanvasRenderingContext2D, objects: FabricObject[]) {\n    for (let i = 0, len = objects.length; i < len; ++i) {\n      objects[i] && objects[i].render(ctx);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {string} property 'background' or 'overlay'\n   */\n  _renderBackgroundOrOverlay(\n    ctx: CanvasRenderingContext2D,\n    property: 'background' | 'overlay',\n  ) {\n    const fill = this[`${property}Color`],\n      object = this[`${property}Image`],\n      v = this.viewportTransform,\n      needsVpt = this[`${property}Vpt`];\n    if (!fill && !object) {\n      return;\n    }\n    const isAFiller = isFiller(fill);\n    if (fill) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(this.width, 0);\n      ctx.lineTo(this.width, this.height);\n      ctx.lineTo(0, this.height);\n      ctx.closePath();\n      ctx.fillStyle = isAFiller ? fill.toLive(ctx /* this */)! : fill;\n      if (needsVpt) {\n        ctx.transform(...v);\n      }\n      if (isAFiller) {\n        ctx.transform(1, 0, 0, 1, fill.offsetX || 0, fill.offsetY || 0);\n        const m = ((fill as Gradient<'linear'>).gradientTransform ||\n          (fill as Pattern).patternTransform) as TMat2D;\n        m && ctx.transform(...m);\n      }\n      ctx.fill();\n      ctx.restore();\n    }\n    if (object) {\n      ctx.save();\n      const { skipOffscreen } = this;\n      // if the object doesn't move with the viewport,\n      // the offscreen concept does not apply;\n      this.skipOffscreen = needsVpt;\n      if (needsVpt) {\n        ctx.transform(...v);\n      }\n      object.render(ctx);\n      this.skipOffscreen = skipOffscreen;\n      ctx.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderBackground(ctx: CanvasRenderingContext2D) {\n    this._renderBackgroundOrOverlay(ctx, 'background');\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderOverlay(ctx: CanvasRenderingContext2D) {\n    this._renderBackgroundOrOverlay(ctx, 'overlay');\n  }\n\n  /**\n   * Returns coordinates of a center of canvas.\n   * @return {Point}\n   */\n  getCenterPoint() {\n    return new Point(this.width / 2, this.height / 2);\n  }\n\n  /**\n   * Centers object horizontally in the canvas\n   */\n  centerObjectH(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(this.getCenterPoint().x, object.getCenterPoint().y),\n    );\n  }\n\n  /**\n   * Centers object vertically in the canvas\n   * @param {FabricObject} object Object to center vertically\n   */\n  centerObjectV(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(object.getCenterPoint().x, this.getCenterPoint().y),\n    );\n  }\n\n  /**\n   * Centers object vertically and horizontally in the canvas\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  centerObject(object: FabricObject) {\n    return this._centerObject(object, this.getCenterPoint());\n  }\n\n  /**\n   * Centers object vertically and horizontally in the viewport\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  viewportCenterObject(object: FabricObject) {\n    return this._centerObject(object, this.getVpCenter());\n  }\n\n  /**\n   * Centers object horizontally in the viewport, object.top is unchanged\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  viewportCenterObjectH(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(this.getVpCenter().x, object.getCenterPoint().y),\n    );\n  }\n\n  /**\n   * Centers object Vertically in the viewport, object.top is unchanged\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  viewportCenterObjectV(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(object.getCenterPoint().x, this.getVpCenter().y),\n    );\n  }\n\n  /**\n   * Calculate the point in canvas that correspond to the center of actual viewport.\n   * @return {Point} vpCenter, viewport center\n   */\n  getVpCenter(): Point {\n    return transformPoint(\n      this.getCenterPoint(),\n      invertTransform(this.viewportTransform),\n    );\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object Object to center\n   * @param {Point} center Center point\n   */\n  _centerObject(object: FabricObject, center: Point) {\n    object.setXY(center, CENTER, CENTER);\n    object.setCoords();\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * Returns dataless JSON representation of canvas\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} json string\n   */\n  toDatalessJSON(propertiesToInclude?: string[]) {\n    return this.toDatalessObject(propertiesToInclude);\n  }\n\n  /**\n   * Returns object representation of canvas\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject(propertiesToInclude?: string[]) {\n    return this._toObjectMethod('toObject', propertiesToInclude);\n  }\n\n  /**\n   * Returns Object representation of canvas\n   * this alias is provided because if you call JSON.stringify on an instance,\n   * the toJSON object will be invoked if it exists.\n   * Having a toJSON method means you can do JSON.stringify(myCanvas)\n   * JSON does not support additional properties because toJSON has its own signature\n   * @return {Object} JSON compatible object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON representation of canvas </caption>\n   * const json = canvas.toJSON();\n   * @example <caption>JSON representation of canvas </caption>\n   * const json = JSON.stringify(canvas);\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Returns dataless object representation of canvas\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toDatalessObject(propertiesToInclude?: string[]) {\n    return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n  }\n\n  /**\n   * @private\n   */\n  _toObjectMethod(\n    methodName: TValidToObjectMethod,\n    propertiesToInclude?: string[],\n  ) {\n    const clipPath = this.clipPath;\n    const clipPathData =\n      clipPath && !clipPath.excludeFromExport\n        ? this._toObject(clipPath, methodName, propertiesToInclude)\n        : null;\n    return {\n      version: VERSION,\n      ...pick(this, propertiesToInclude as (keyof this)[]),\n      objects: this._objects\n        .filter((object) => !object.excludeFromExport)\n        .map((instance) =>\n          this._toObject(instance, methodName, propertiesToInclude),\n        ),\n      ...this.__serializeBgOverlay(methodName, propertiesToInclude),\n      ...(clipPathData ? { clipPath: clipPathData } : null),\n    };\n  }\n\n  /**\n   * @private\n   */\n  protected _toObject(\n    instance: FabricObject,\n    methodName: TValidToObjectMethod,\n    propertiesToInclude?: string[],\n  ) {\n    let originalValue;\n\n    if (!this.includeDefaultValues) {\n      originalValue = instance.includeDefaultValues;\n      instance.includeDefaultValues = false;\n    }\n\n    const object = instance[methodName](propertiesToInclude);\n    if (!this.includeDefaultValues) {\n      instance.includeDefaultValues = !!originalValue;\n    }\n    return object;\n  }\n\n  /**\n   * @private\n   */\n  __serializeBgOverlay(\n    methodName: TValidToObjectMethod,\n    propertiesToInclude?: string[],\n  ) {\n    const data: any = {},\n      bgImage = this.backgroundImage,\n      overlayImage = this.overlayImage,\n      bgColor = this.backgroundColor,\n      overlayColor = this.overlayColor;\n\n    if (isFiller(bgColor)) {\n      if (!bgColor.excludeFromExport) {\n        data.background = bgColor.toObject(propertiesToInclude);\n      }\n    } else if (bgColor) {\n      data.background = bgColor;\n    }\n\n    if (isFiller(overlayColor)) {\n      if (!overlayColor.excludeFromExport) {\n        data.overlay = overlayColor.toObject(propertiesToInclude);\n      }\n    } else if (overlayColor) {\n      data.overlay = overlayColor;\n    }\n\n    if (bgImage && !bgImage.excludeFromExport) {\n      data.backgroundImage = this._toObject(\n        bgImage,\n        methodName,\n        propertiesToInclude,\n      );\n    }\n    if (overlayImage && !overlayImage.excludeFromExport) {\n      data.overlayImage = this._toObject(\n        overlayImage,\n        methodName,\n        propertiesToInclude,\n      );\n    }\n\n    return data;\n  }\n\n  /* _TO_SVG_START_ */\n\n  declare svgViewportTransformation: boolean;\n\n  /**\n   * Returns SVG representation of canvas\n   * @function\n   * @param {Object} [options] Options object for SVG output\n   * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n   * @param {Object} [options.viewBox] SVG viewbox object\n   * @param {Number} [options.viewBox.x] x-coordinate of viewbox\n   * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n   * @param {Number} [options.viewBox.width] Width of viewbox\n   * @param {Number} [options.viewBox.height] Height of viewbox\n   * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n   * @param {String} [options.width] desired width of svg with or without units\n   * @param {String} [options.height] desired height of svg with or without units\n   * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n   * @return {String} SVG string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n   * @example <caption>Normal SVG output</caption>\n   * var svg = canvas.toSVG();\n   * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n   * var svg = canvas.toSVG({suppressPreamble: true});\n   * @example <caption>SVG output with viewBox attribute</caption>\n   * var svg = canvas.toSVG({\n   *   viewBox: {\n   *     x: 100,\n   *     y: 100,\n   *     width: 200,\n   *     height: 300\n   *   }\n   * });\n   * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n   * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n   * @example <caption>Modify SVG output with reviver function</caption>\n   * var svg = canvas.toSVG(null, function(svg) {\n   *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n   * });\n   */\n  toSVG(options: TSVGExportOptions = {}, reviver?: TSVGReviver) {\n    options.reviver = reviver;\n    const markup: string[] = [];\n\n    this._setSVGPreamble(markup, options);\n    this._setSVGHeader(markup, options);\n    if (this.clipPath) {\n      markup.push(`<g clip-path=\"url(#${this.clipPath.clipPathId})\" >\\n`);\n    }\n    this._setSVGBgOverlayColor(markup, 'background');\n    this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n    this._setSVGObjects(markup, reviver);\n    if (this.clipPath) {\n      markup.push('</g>\\n');\n    }\n    this._setSVGBgOverlayColor(markup, 'overlay');\n    this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n    markup.push('</svg>');\n\n    return markup.join('');\n  }\n\n  /**\n   * @private\n   */\n  _setSVGPreamble(markup: string[], options: TSVGExportOptions): void {\n    if (options.suppressPreamble) {\n      return;\n    }\n    markup.push(\n      '<?xml version=\"1.0\" encoding=\"',\n      options.encoding || 'UTF-8',\n      '\" standalone=\"no\" ?>\\n',\n      '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n      '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n',\n    );\n  }\n\n  /**\n   * @private\n   */\n  _setSVGHeader(markup: string[], options: TSVGExportOptions): void {\n    const width = options.width || `${this.width}`,\n      height = options.height || `${this.height}`,\n      NUM_FRACTION_DIGITS = config.NUM_FRACTION_DIGITS,\n      optViewBox = options.viewBox;\n    let viewBox: string;\n    if (optViewBox) {\n      viewBox = `viewBox=\"${optViewBox.x} ${optViewBox.y} ${optViewBox.width} ${optViewBox.height}\" `;\n    } else if (this.svgViewportTransformation) {\n      const vpt = this.viewportTransform;\n      viewBox = `viewBox=\"${toFixed(\n        -vpt[4] / vpt[0],\n        NUM_FRACTION_DIGITS,\n      )} ${toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS)} ${toFixed(\n        this.width / vpt[0],\n        NUM_FRACTION_DIGITS,\n      )} ${toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS)}\" `;\n    } else {\n      viewBox = `viewBox=\"0 0 ${this.width} ${this.height}\" `;\n    }\n\n    markup.push(\n      '<svg ',\n      'xmlns=\"http://www.w3.org/2000/svg\" ',\n      'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n      'version=\"1.1\" ',\n      'width=\"',\n      width,\n      '\" ',\n      'height=\"',\n      height,\n      '\" ',\n      viewBox,\n      'xml:space=\"preserve\">\\n',\n      '<desc>Created with Fabric.js ',\n      VERSION,\n      '</desc>\\n',\n      '<defs>\\n',\n      this.createSVGFontFacesMarkup(),\n      this.createSVGRefElementsMarkup(),\n      this.createSVGClipPathMarkup(options),\n      '</defs>\\n',\n    );\n  }\n\n  createSVGClipPathMarkup(options: TSVGExportOptions): string {\n    const clipPath = this.clipPath;\n    if (clipPath) {\n      clipPath.clipPathId = `CLIPPATH_${uid()}`;\n      return `<clipPath id=\"${clipPath.clipPathId}\" >\\n${clipPath.toClipPathSVG(\n        options.reviver,\n      )}</clipPath>\\n`;\n    }\n    return '';\n  }\n\n  /**\n   * Creates markup containing SVG referenced elements like patterns, gradients etc.\n   * @return {String}\n   */\n  createSVGRefElementsMarkup(): string {\n    return (['background', 'overlay'] as const)\n      .map((prop) => {\n        const fill = this[`${prop}Color`];\n        if (isFiller(fill)) {\n          const shouldTransform = this[`${prop}Vpt`],\n            vpt = this.viewportTransform,\n            object = {\n              // otherwise circular dependency\n              isType: () => false,\n              width: this.width / (shouldTransform ? vpt[0] : 1),\n              height: this.height / (shouldTransform ? vpt[3] : 1),\n            };\n          return fill.toSVG(object as FabricObject, {\n            additionalTransform: shouldTransform ? matrixToSVG(vpt) : '',\n          });\n        }\n      })\n      .join('');\n  }\n\n  /**\n   * Creates markup containing SVG font faces,\n   * font URLs for font faces must be collected by developers\n   * and are not extracted from the DOM by fabricjs\n   * @param {Array} objects Array of fabric objects\n   * @return {String}\n   */\n  createSVGFontFacesMarkup(): string {\n    const objects: FabricObject[] = [],\n      fontList: Record<string, boolean> = {},\n      fontPaths = config.fontPaths;\n\n    this._objects.forEach(function add(object) {\n      objects.push(object);\n      if (isCollection(object)) {\n        object._objects.forEach(add);\n      }\n    });\n\n    objects.forEach((obj) => {\n      if (!isTextObject(obj)) {\n        return;\n      }\n      const { styles, fontFamily } = obj;\n      if (fontList[fontFamily] || !fontPaths[fontFamily]) {\n        return;\n      }\n      fontList[fontFamily] = true;\n      if (!styles) {\n        return;\n      }\n      Object.values(styles).forEach((styleRow) => {\n        Object.values(styleRow).forEach(({ fontFamily = '' }) => {\n          if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n            fontList[fontFamily] = true;\n          }\n        });\n      });\n    });\n\n    const fontListMarkup = Object.keys(fontList)\n      .map(\n        (fontFamily) =>\n          `\\t\\t@font-face {\\n\\t\\t\\tfont-family: '${fontFamily}';\\n\\t\\t\\tsrc: url('${fontPaths[fontFamily]}');\\n\\t\\t}\\n`,\n      )\n      .join('');\n\n    if (fontListMarkup) {\n      return `\\t<style type=\"text/css\"><![CDATA[\\n${fontListMarkup}]]></style>\\n`;\n    }\n    return '';\n  }\n\n  /**\n   * @private\n   */\n  _setSVGObjects(markup: string[], reviver?: TSVGReviver) {\n    this.forEachObject((fabricObject) => {\n      // *PMW*: Attaching pmw id\n      const uid = fabricObject.__PMWID;\n      if (fabricObject.excludeFromExport) {\n        return;\n      }\n      // *PMW*\n      if (uid) {\n        markup.push(`<g id=\"${uid}\">\\n`);\n      }\n      this._setSVGObject(markup, fabricObject, reviver);\n      // *PMW*\n      if (uid) {\n        markup.push(`</g id=\"${uid}\">\\n`);\n      }\n    });\n  }\n\n  /**\n   * This is its own function because the Canvas ( non static ) requires extra code here\n   * @private\n   */\n  _setSVGObject(\n    markup: string[],\n    instance: FabricObject,\n    reviver?: TSVGReviver,\n  ) {\n    markup.push(instance.toSVG(reviver));\n  }\n\n  /**\n   * @private\n   */\n  _setSVGBgOverlayImage(\n    markup: string[],\n    property: 'overlayImage' | 'backgroundImage',\n    reviver?: TSVGReviver,\n  ) {\n    const bgOrOverlay = this[property];\n    if (bgOrOverlay && !bgOrOverlay.excludeFromExport && bgOrOverlay.toSVG) {\n      markup.push(bgOrOverlay.toSVG(reviver));\n    }\n  }\n\n  /**\n   * @TODO this seems to handle patterns but fail at gradients.\n   * @private\n   */\n  _setSVGBgOverlayColor(markup: string[], property: 'background' | 'overlay') {\n    const filler = this[`${property}Color`];\n    if (!filler) {\n      return;\n    }\n    if (isFiller(filler)) {\n      const repeat = (filler as Pattern).repeat || '',\n        finalWidth = this.width,\n        finalHeight = this.height,\n        shouldInvert = this[`${property}Vpt`],\n        additionalTransform = shouldInvert\n          ? matrixToSVG(invertTransform(this.viewportTransform))\n          : '';\n      markup.push(\n        `<rect transform=\"${additionalTransform} translate(${finalWidth / 2},${\n          finalHeight / 2\n        })\" x=\"${filler.offsetX - finalWidth / 2}\" y=\"${\n          filler.offsetY - finalHeight / 2\n        }\" width=\"${\n          (repeat === 'repeat-y' || repeat === 'no-repeat') && isPattern(filler)\n            ? (filler.source as HTMLImageElement).width\n            : finalWidth\n        }\" height=\"${\n          (repeat === 'repeat-x' || repeat === 'no-repeat') && isPattern(filler)\n            ? (filler.source as HTMLImageElement).height\n            : finalHeight\n        }\" fill=\"url(#SVGID_${filler.id})\"></rect>\\n`,\n      );\n    } else {\n      markup.push(\n        '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ',\n        'fill=\"',\n        filler,\n        '\"',\n        '></rect>\\n',\n      );\n    }\n  }\n  /* _TO_SVG_END_ */\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   *\n   * **IMPORTANT**: It is recommended to abort loading tasks before calling this method to prevent race conditions and unnecessary networking\n   *\n   * @param {String|Object} json JSON string or object\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @param {Object} [options] options\n   * @param {AbortSignal} [options.signal] see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @return {Promise<Canvas | StaticCanvas>} instance\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json).then((canvas) => canvas.requestRenderAll());\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * }).then((canvas) => {\n   *   ... canvas is restored, add your code.\n   * });\n   *\n   */\n  loadFromJSON(\n    json: string | Record<string, any>,\n    reviver?: EnlivenObjectOptions['reviver'],\n    { signal }: Abortable = {},\n  ): Promise<this> {\n    if (!json) {\n      return Promise.reject(new FabricError('`json` is undefined'));\n    }\n\n    // parse json if it wasn't already\n    const serialized = typeof json === 'string' ? JSON.parse(json) : json;\n    const {\n      objects = [],\n      backgroundImage,\n      background,\n      overlayImage,\n      overlay,\n      clipPath,\n    } = serialized;\n    const renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    return Promise.all([\n      enlivenObjects<FabricObject>(objects, {\n        reviver,\n        signal,\n      }),\n      enlivenObjectEnlivables(\n        {\n          backgroundImage,\n          backgroundColor: background,\n          overlayImage,\n          overlayColor: overlay,\n          clipPath,\n        },\n        { signal },\n      ),\n    ]).then(([enlived, enlivedMap]) => {\n      this.clear();\n      this.add(...enlived);\n      this.set(serialized);\n      this.set(enlivedMap);\n      this.renderOnAddRemove = renderOnAddRemove;\n      return this;\n    });\n  }\n\n  /**\n   * Clones canvas instance\n   * @param {string[]} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone(properties: string[]) {\n    const data = this.toObject(properties);\n    const canvas = this.cloneWithoutData();\n    return canvas.loadFromJSON(data);\n  }\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions since loadFromJSON does not affect canvas size.\n   */\n  cloneWithoutData() {\n    const el = createCanvasElementFor(this);\n    return new (this.constructor as Constructor<this>)(el);\n  }\n\n  /**\n   * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n   * @param {Object} [options] Options object\n   * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n   * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n   * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n   * @param {(object: fabric.Object) => boolean} [options.filter] Function to filter objects.\n   * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n   * @see {@link https://jsfiddle.net/xsjua1rd/ demo}\n   * @example <caption>Generate jpeg dataURL with lower quality</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'jpeg',\n   *   quality: 0.8\n   * });\n   * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'png',\n   *   left: 100,\n   *   top: 100,\n   *   width: 200,\n   *   height: 200\n   * });\n   * @example <caption>Generate double scaled png dataURL</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'png',\n   *   multiplier: 2\n   * });\n   * @example <caption>Generate dataURL with objects that overlap a specified object</caption>\n   * var myObject;\n   * var dataURL = canvas.toDataURL({\n   *   filter: (object) => object.isContainedWithinObject(myObject) || object.intersectsWithObject(myObject)\n   * });\n   */\n  toDataURL(options = {} as TDataUrlOptions): string {\n    const {\n      format = 'png',\n      quality = 1,\n      multiplier = 1,\n      enableRetinaScaling = false,\n    } = options;\n    const finalMultiplier =\n      multiplier * (enableRetinaScaling ? this.getRetinaScaling() : 1);\n\n    return toDataURL(\n      this.toCanvasElement(finalMultiplier, options),\n      format,\n      quality,\n    );\n  }\n  toBlob(options = {} as TDataUrlOptions): Promise<Blob | null> {\n    const {\n      format = 'png',\n      quality = 1,\n      multiplier = 1,\n      enableRetinaScaling = false,\n    } = options;\n    const finalMultiplier =\n      multiplier * (enableRetinaScaling ? this.getRetinaScaling() : 1);\n\n    return toBlob(\n      this.toCanvasElement(finalMultiplier, options),\n      format,\n      quality,\n    );\n  }\n\n  /**\n   * Create a new HTMLCanvas element painted with the current canvas content.\n   * No need to resize the actual one or repaint it.\n   * Will transfer object ownership to a new canvas, paint it, and set everything back.\n   * This is an intermediary step used to get to a dataUrl but also it is useful to\n   * create quick image copies of a canvas without passing for the dataUrl string\n   * @param {Number} [multiplier] a zoom factor.\n   * @param {Object} [options] Cropping informations\n   * @param {Number} [options.left] Cropping left offset.\n   * @param {Number} [options.top] Cropping top offset.\n   * @param {Number} [options.width] Cropping width.\n   * @param {Number} [options.height] Cropping height.\n   * @param {(object: fabric.Object) => boolean} [options.filter] Function to filter objects.\n   */\n  toCanvasElement(\n    multiplier = 1,\n    { width, height, left, top, filter } = {} as TToCanvasElementOptions,\n  ): HTMLCanvasElement {\n    const scaledWidth = (width || this.width) * multiplier,\n      scaledHeight = (height || this.height) * multiplier,\n      zoom = this.getZoom(),\n      originalWidth = this.width,\n      originalHeight = this.height,\n      originalSkipControlsDrawing = this.skipControlsDrawing,\n      newZoom = zoom * multiplier,\n      vp = this.viewportTransform,\n      translateX = (vp[4] - (left || 0)) * multiplier,\n      translateY = (vp[5] - (top || 0)) * multiplier,\n      newVp = [newZoom, 0, 0, newZoom, translateX, translateY] as TMat2D,\n      originalRetina = this.enableRetinaScaling,\n      canvasEl = createCanvasElementFor({\n        width: scaledWidth,\n        height: scaledHeight,\n      }),\n      objectsToRender = filter\n        ? this._objects.filter((obj) => filter(obj))\n        : this._objects;\n    this.enableRetinaScaling = false;\n    this.viewportTransform = newVp;\n    this.width = scaledWidth;\n    this.height = scaledHeight;\n    this.skipControlsDrawing = true;\n    this.calcViewportBoundaries();\n    this.renderCanvas(canvasEl.getContext('2d')!, objectsToRender);\n    this.viewportTransform = vp;\n    this.width = originalWidth;\n    this.height = originalHeight;\n    this.calcViewportBoundaries();\n    this.enableRetinaScaling = originalRetina;\n    this.skipControlsDrawing = originalSkipControlsDrawing;\n    return canvasEl;\n  }\n\n  /**\n   * Waits until rendering has settled to destroy the canvas\n   * @returns {Promise<boolean>} a promise resolving to `true` once the canvas has been destroyed or to `false` if the canvas has was already destroyed\n   * @throws if aborted by a consequent call\n   */\n  dispose() {\n    !this.disposed &&\n      this.elements.cleanupDOM({ width: this.width, height: this.height });\n    runningAnimations.cancelByCanvas(this);\n    this.disposed = true;\n    return new Promise<boolean>((resolve, reject) => {\n      const task = () => {\n        this.destroy();\n        resolve(true);\n      };\n      task.kill = reject;\n      if (this.__cleanupTask) {\n        this.__cleanupTask.kill('aborted');\n      }\n\n      if (this.destroyed) {\n        resolve(false);\n      } else if (this.nextRenderHandle) {\n        this.__cleanupTask = task;\n      } else {\n        task();\n      }\n    });\n  }\n\n  /**\n   * Clears the canvas element, disposes objects and frees resources.\n   *\n   * Invoked as part of the **async** operation of {@link dispose}.\n   *\n   * **CAUTION**:\n   *\n   * This method is **UNSAFE**.\n   * You may encounter a race condition using it if there's a requested render.\n   * Call this method only if you are sure rendering has settled.\n   * Consider using {@link dispose} as it is **SAFE**\n   *\n   * @private\n   */\n  destroy() {\n    this.destroyed = true;\n    this.cancelRequestedRender();\n    this.forEachObject((object) => object.dispose());\n    this._objects = [];\n    if (this.backgroundImage) {\n      this.backgroundImage.dispose();\n    }\n    this.backgroundImage = undefined;\n    if (this.overlayImage) {\n      this.overlayImage.dispose();\n    }\n    this.overlayImage = undefined;\n    this.elements.dispose();\n  }\n\n  /**\n   * Returns a string representation of an instance\n   * @return {String} string representation of an instance\n   */\n  toString() {\n    return `#<Canvas (${this.complexity()}): { objects: ${\n      this._objects.length\n    } }>`;\n  }\n}\n"],"names":["StaticCanvas","createCollectionMixin","CommonMethods","lowerCanvasEl","_this$elements$lower","elements","lower","el","contextContainer","_this$elements$lower2","ctx","getDefaults","ownDefaults","constructor","options","arguments","length","undefined","Object","assign","set","initElements","_setDimensionsImpl","width","height","skipControlsDrawing","viewportTransform","calcViewportBoundaries","StaticCanvasDOMManager","add","size","renderOnAddRemove","requestRenderAll","insertAt","index","_len","objects","Array","_key","remove","removed","_onObjectAdded","obj","canvas","log","_set","setCoords","fire","target","_onObjectRemoved","_onStackOrderChanged","getRetinaScaling","enableRetinaScaling","getDevicePixelRatio","calcOffset","_offset","getWidth","getHeight","dimensions","cssOnly","backstoreOnly","setDimensions","hasLostContext","setCSSDimensions","getZoom","setViewportTransform","vpt","zoomToPoint","point","value","before","newPoint","transformPoint","invertTransform","after","x","y","setZoom","Point","absolutePan","relativePan","getElement","clearContext","clearRect","getContext","clear","getObjects","backgroundImage","overlayImage","backgroundColor","overlayColor","renderAll","cancelRequestedRender","destroyed","renderCanvas","_objects","renderAndReset","nextRenderHandle","disposed","requestAnimFrame","iVpt","a","b","min","max","vptCoords","tl","tr","bl","br","cancelAnimFrame","drawControls","_ctx","v","path","clipPath","imageSmoothingEnabled","patternQuality","_renderBackground","save","transform","_renderObjects","restore","controlsAboveOverlay","shouldCache","_transformDone","renderCache","forClipping","drawClipPathOnCanvas","_renderOverlay","__cleanupTask","globalCompositeOperation","scale","zoomX","zoomY","drawImage","_cacheCanvas","cacheTranslationX","cacheTranslationY","i","len","render","_renderBackgroundOrOverlay","property","fill","object","needsVpt","isAFiller","isFiller","beginPath","moveTo","lineTo","closePath","fillStyle","toLive","offsetX","offsetY","m","gradientTransform","patternTransform","skipOffscreen","getCenterPoint","centerObjectH","_centerObject","centerObjectV","centerObject","viewportCenterObject","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","center","setXY","CENTER","toDatalessJSON","propertiesToInclude","toDatalessObject","toObject","_toObjectMethod","toJSON","methodName","clipPathData","excludeFromExport","_toObject","version","VERSION","pick","filter","map","instance","__serializeBgOverlay","originalValue","includeDefaultValues","data","bgImage","bgColor","background","overlay","toSVG","reviver","markup","_setSVGPreamble","_setSVGHeader","push","clipPathId","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","join","suppressPreamble","encoding","NUM_FRACTION_DIGITS","config","optViewBox","viewBox","svgViewportTransformation","toFixed","createSVGFontFacesMarkup","createSVGRefElementsMarkup","createSVGClipPathMarkup","uid","toClipPathSVG","prop","shouldTransform","isType","additionalTransform","matrixToSVG","fontList","fontPaths","forEach","isCollection","isTextObject","styles","fontFamily","values","styleRow","_ref","fontListMarkup","keys","forEachObject","fabricObject","__PMWID","_setSVGObject","bgOrOverlay","filler","repeat","finalWidth","finalHeight","shouldInvert","isPattern","source","id","loadFromJSON","json","signal","Promise","reject","FabricError","serialized","JSON","parse","all","enlivenObjects","enlivenObjectEnlivables","then","_ref2","enlived","enlivedMap","clone","properties","cloneWithoutData","createCanvasElementFor","toDataURL","format","quality","multiplier","finalMultiplier","toCanvasElement","toBlob","left","top","scaledWidth","scaledHeight","zoom","originalWidth","originalHeight","originalSkipControlsDrawing","newZoom","vp","translateX","translateY","newVp","originalRetina","canvasEl","objectsToRender","dispose","cleanupDOM","runningAnimations","cancelByCanvas","resolve","task","destroy","kill","toString","complexity","_defineProperty","staticCanvasDefaults"],"mappings":"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"}