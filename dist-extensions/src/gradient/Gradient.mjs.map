{"version":3,"file":"Gradient.mjs","sources":["../../../src/gradient/Gradient.ts"],"sourcesContent":["import { iMatrix } from '../constants';\nimport { parseTransformAttribute } from '../parser/parseTransformAttribute';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TMat2D } from '../typedefs';\nimport { uid } from '../util/internals/uid';\nimport { pick } from '../util/misc/pick';\nimport { matrixToSVG } from '../util/misc/svgExport';\nimport { linearDefaultCoords, radialDefaultCoords } from './constants';\nimport { parseColorStops } from './parser/parseColorStops';\nimport { parseCoords } from './parser/parseCoords';\nimport { parseType, parseGradientUnits } from './parser/misc';\nimport type {\n  ColorStop,\n  GradientCoords,\n  GradientOptions,\n  GradientType,\n  GradientUnits,\n  SVGOptions,\n  SerializedGradientProps,\n} from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { isPath } from '../util/typeAssertions';\n\n/**\n * Gradient class\n * @class Gradient\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n */\nexport class Gradient<\n  S,\n  T extends GradientType = S extends GradientType ? S : 'linear',\n> {\n  /**\n   * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n   * @type Number\n   * @default 0\n   */\n  declare offsetX: number;\n\n  /**\n   * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n   * @type Number\n   * @default 0\n   */\n  declare offsetY: number;\n\n  /**\n   * A transform matrix to apply to the gradient before painting.\n   * Imported from svg gradients, is not applied with the current transform in the center.\n   * Before this transform is applied, the origin point is at the top left corner of the object\n   * plus the addition of offsetY and offsetX.\n   * @type Number[]\n   * @default null\n   */\n  declare gradientTransform?: TMat2D;\n\n  /**\n   * coordinates units for coords.\n   * If `pixels`, the number of coords are in the same unit of width / height.\n   * If set as `percentage` the coords are still a number, but 1 means 100% of width\n   * for the X and 100% of the height for the y. It can be bigger than 1 and negative.\n   * allowed values pixels or percentage.\n   * @type GradientUnits\n   * @default 'pixels'\n   */\n  declare gradientUnits: GradientUnits;\n\n  /**\n   * Gradient type linear or radial\n   * @type GradientType\n   * @default 'linear'\n   */\n  declare type: T;\n\n  /**\n   * Defines how the gradient is located in space and spread\n   * @type GradientCoords\n   */\n  declare coords: GradientCoords<T>;\n\n  /**\n   * Defines how many colors a gradient has and how they are located on the axis\n   * defined by coords\n   * @type GradientCoords\n   */\n  declare colorStops: ColorStop[];\n\n  /**\n   * If true, this object will not be exported during the serialization of a canvas\n   * @type boolean\n   */\n  declare excludeFromExport?: boolean;\n\n  /**\n   * ID used for SVG export functionalities\n   * @type number | string\n   */\n  declare readonly id: string | number;\n\n  static type = 'Gradient';\n\n  constructor(options: GradientOptions<T>) {\n    const {\n      type = 'linear' as T,\n      gradientUnits = 'pixels',\n      coords = {},\n      colorStops = [],\n      offsetX = 0,\n      offsetY = 0,\n      gradientTransform,\n      id,\n    } = options || {};\n    Object.assign(this, {\n      type,\n      gradientUnits,\n      coords: {\n        ...(type === 'radial' ? radialDefaultCoords : linearDefaultCoords),\n        ...coords,\n      },\n      colorStops,\n      offsetX,\n      offsetY,\n      gradientTransform,\n      id: id ? `${id}_${uid()}` : uid(),\n    });\n  }\n\n  /**\n   * Adds another colorStop\n   * @param {Record<string, string>} colorStop Object with offset and color\n   * @return {Gradient} thisArg\n   */\n  addColorStop(colorStops: Record<string, string>) {\n    for (const position in colorStops) {\n      this.colorStops.push({\n        offset: parseFloat(position),\n        color: colorStops[position],\n      });\n    }\n    return this;\n  }\n\n  /**\n   * Returns object representation of a gradient\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {object}\n   */\n  toObject(\n    propertiesToInclude?: (keyof this | string)[],\n  ): SerializedGradientProps<T> {\n    return {\n      ...pick(this, propertiesToInclude as (keyof this)[]),\n      type: this.type,\n      coords: { ...this.coords } as GradientCoords<T>,\n      colorStops: this.colorStops.map((colorStop) => ({ ...colorStop })),\n      offsetX: this.offsetX,\n      offsetY: this.offsetY,\n      gradientUnits: this.gradientUnits,\n      gradientTransform: this.gradientTransform\n        ? [...this.gradientTransform]\n        : undefined,\n    };\n  }\n\n  /* _TO_SVG_START_ */\n  /**\n   * Returns SVG representation of an gradient\n   * @param {FabricObject} object Object to create a gradient for\n   * @return {String} SVG representation of an gradient (linear/radial)\n   */\n  toSVG(\n    object: FabricObject,\n    {\n      additionalTransform: preTransform,\n    }: { additionalTransform?: string } = {},\n  ) {\n    const markup = [],\n      transform = (\n        this.gradientTransform\n          ? this.gradientTransform.concat()\n          : iMatrix.concat()\n      ) as TMat2D,\n      gradientUnits =\n        this.gradientUnits === 'pixels'\n          ? 'userSpaceOnUse'\n          : 'objectBoundingBox';\n    // colorStops must be sorted ascending, and guarded against deep mutations\n    const colorStops = this.colorStops\n      .map((colorStop) => ({ ...colorStop }))\n      .sort((a, b) => {\n        return a.offset - b.offset;\n      });\n\n    let offsetX = -this.offsetX,\n      offsetY = -this.offsetY;\n    if (gradientUnits === 'objectBoundingBox') {\n      offsetX /= object.width;\n      offsetY /= object.height;\n    } else {\n      offsetX += object.width / 2;\n      offsetY += object.height / 2;\n    }\n    // todo what about polygon/polyline?\n    if (isPath(object) && this.gradientUnits !== 'percentage') {\n      offsetX -= object.pathOffset.x;\n      offsetY -= object.pathOffset.y;\n    }\n    transform[4] -= offsetX;\n    transform[5] -= offsetY;\n\n    const commonAttributes = [\n      `id=\"SVGID_${this.id}\"`,\n      `gradientUnits=\"${gradientUnits}\"`,\n      `gradientTransform=\"${\n        preTransform ? preTransform + ' ' : ''\n      }${matrixToSVG(transform)}\"`,\n      '',\n    ].join(' ');\n\n    if (this.type === 'linear') {\n      const { x1, y1, x2, y2 } = this.coords;\n      markup.push(\n        '<linearGradient ',\n        commonAttributes,\n        ' x1=\"',\n        x1,\n        '\" y1=\"',\n        y1,\n        '\" x2=\"',\n        x2,\n        '\" y2=\"',\n        y2,\n        '\">\\n',\n      );\n    } else if (this.type === 'radial') {\n      const { x1, y1, x2, y2, r1, r2 } = this\n        .coords as GradientCoords<'radial'>;\n      const needsSwap = r1 > r2;\n      // svg radial gradient has just 1 radius. the biggest.\n      markup.push(\n        '<radialGradient ',\n        commonAttributes,\n        ' cx=\"',\n        needsSwap ? x1 : x2,\n        '\" cy=\"',\n        needsSwap ? y1 : y2,\n        '\" r=\"',\n        needsSwap ? r1 : r2,\n        '\" fx=\"',\n        needsSwap ? x2 : x1,\n        '\" fy=\"',\n        needsSwap ? y2 : y1,\n        '\">\\n',\n      );\n      if (needsSwap) {\n        // svg goes from internal to external radius. if radius are inverted, swap color stops.\n        colorStops.reverse(); //  mutates array\n        colorStops.forEach((colorStop) => {\n          colorStop.offset = 1 - colorStop.offset;\n        });\n      }\n      const minRadius = Math.min(r1, r2);\n      if (minRadius > 0) {\n        // i have to shift all colorStops and add new one in 0.\n        const maxRadius = Math.max(r1, r2),\n          percentageShift = minRadius / maxRadius;\n        colorStops.forEach((colorStop) => {\n          colorStop.offset += percentageShift * (1 - colorStop.offset);\n        });\n      }\n    }\n\n    colorStops.forEach(({ color, offset }) => {\n      markup.push(\n        `<stop offset=\"${offset * 100}%\" style=\"stop-color:${color};\"/>\\n`,\n      );\n    });\n\n    markup.push(\n      this.type === 'linear' ? '</linearGradient>' : '</radialGradient>',\n      '\\n',\n    );\n\n    return markup.join('');\n  }\n  /* _TO_SVG_END_ */\n\n  /**\n   * Returns an instance of CanvasGradient\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @return {CanvasGradient}\n   */\n  toLive(ctx: CanvasRenderingContext2D): CanvasGradient {\n    const { x1, y1, x2, y2, r1, r2 } = this.coords as GradientCoords<'radial'>;\n    const gradient =\n      this.type === 'linear'\n        ? ctx.createLinearGradient(x1, y1, x2, y2)\n        : ctx.createRadialGradient(x1, y1, r1, x2, y2, r2);\n\n    this.colorStops.forEach(({ color, offset }) => {\n      gradient.addColorStop(offset, color);\n    });\n\n    return gradient;\n  }\n\n  static async fromObject(\n    options: GradientOptions<'linear'>,\n  ): Promise<Gradient<'linear'>>;\n  static async fromObject(\n    options: GradientOptions<'radial'>,\n  ): Promise<Gradient<'radial'>>;\n  static async fromObject(\n    options: GradientOptions<'linear'> | GradientOptions<'radial'>,\n  ) {\n    const { colorStops, gradientTransform } = options;\n    return new this({\n      ...options,\n      colorStops: colorStops\n        ? colorStops.map((colorStop) => ({ ...colorStop }))\n        : undefined,\n      gradientTransform: gradientTransform ? [...gradientTransform] : undefined,\n    });\n  }\n\n  /* _FROM_SVG_START_ */\n  /**\n   * Returns {@link Gradient} instance from an SVG element\n   * @static\n   * @memberOf Gradient\n   * @param {SVGGradientElement} el SVG gradient element\n   * @param {FabricObject} instance\n   * @param {String} opacity A fill-opacity or stroke-opacity attribute to multiply to each stop's opacity.\n   * @param {SVGOptions} svgOptions an object containing the size of the SVG in order to parse correctly gradients\n   * that uses gradientUnits as 'userSpaceOnUse' and percentages.\n   * @return {Gradient} Gradient instance\n   * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n   * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n   *\n   *  @example\n   *\n   *  <linearGradient id=\"linearGrad1\">\n   *    <stop offset=\"0%\" stop-color=\"white\"/>\n   *    <stop offset=\"100%\" stop-color=\"black\"/>\n   *  </linearGradient>\n   *\n   *  OR\n   *\n   *  <linearGradient id=\"linearGrad2\">\n   *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n   *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n   *  </linearGradient>\n   *\n   *  OR\n   *\n   *  <radialGradient id=\"radialGrad1\">\n   *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n   *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n   *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n   *  </radialGradient>\n   *\n   *  OR\n   *\n   *  <radialGradient id=\"radialGrad2\">\n   *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n   *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n   *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n   *  </radialGradient>\n   *\n   */\n  static fromElement(\n    el: SVGGradientElement,\n    instance: FabricObject,\n    svgOptions: SVGOptions,\n  ): Gradient<GradientType> {\n    const gradientUnits = parseGradientUnits(el);\n    const center = instance._findCenterFromElement();\n    return new this({\n      id: el.getAttribute('id') || undefined,\n      type: parseType(el),\n      coords: parseCoords(el, {\n        width: svgOptions.viewBoxWidth || svgOptions.width,\n        height: svgOptions.viewBoxHeight || svgOptions.height,\n      }),\n      colorStops: parseColorStops(el, svgOptions.opacity),\n      gradientUnits,\n      gradientTransform: parseTransformAttribute(\n        el.getAttribute('gradientTransform') || '',\n      ),\n      ...(gradientUnits === 'pixels'\n        ? {\n            offsetX: instance.width / 2 - center.x,\n            offsetY: instance.height / 2 - center.y,\n          }\n        : {\n            offsetX: 0,\n            offsetY: 0,\n          }),\n    });\n  }\n  /* _FROM_SVG_END_ */\n}\n\nclassRegistry.setClass(Gradient, 'gradient');\nclassRegistry.setClass(Gradient, 'linear');\nclassRegistry.setClass(Gradient, 'radial');\n"],"names":["Gradient","constructor","options","type","gradientUnits","coords","colorStops","offsetX","offsetY","gradientTransform","id","Object","assign","radialDefaultCoords","linearDefaultCoords","uid","addColorStop","position","push","offset","parseFloat","color","toObject","propertiesToInclude","pick","map","colorStop","undefined","toSVG","object","additionalTransform","preTransform","arguments","length","markup","transform","concat","iMatrix","sort","a","b","width","height","isPath","pathOffset","x","y","commonAttributes","matrixToSVG","join","x1","y1","x2","y2","r1","r2","needsSwap","reverse","forEach","minRadius","Math","min","maxRadius","max","percentageShift","_ref","toLive","ctx","gradient","createLinearGradient","createRadialGradient","_ref2","fromObject","fromElement","el","instance","svgOptions","parseGradientUnits","center","_findCenterFromElement","getAttribute","parseType","parseCoords","viewBoxWidth","viewBoxHeight","parseColorStops","opacity","parseTransformAttribute","_defineProperty","classRegistry","setClass"],"mappings":"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"}